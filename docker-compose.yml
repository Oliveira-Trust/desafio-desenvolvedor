version: "2.2"

networks:
  oliveira_trust:

volumes:
  mongo:

services:
  # WEBSERVER
  nginx:
    image: nginx:stable-alpine
    restart: unless-stopped
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./app/src:/var/www
      - ./nginx/config/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - oliveira_trust

  # APPLICATION
  app:
    image: app:latest
    restart: unless-stopped
    build:
      context: app
    container_name: app
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app/src:/var/www
    networks:
      - oliveira_trust

  # DATABASES
  redis:
    image: redis:6.2.4
    container_name: redis
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - oliveira_trust
    expose:
      - 6379
    volumes:
      - ./redis/config/redis.conf:/usr/local/etc/redis/redis.conf
      - ./redis/data:/data
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 10s
      retries: 20

  mongo:
    image: mongo:5
    container_name: mongo
    restart: unless-stopped
    networks:
      - oliveira_trust
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./mongo/data:/data/db
    healthcheck:
      test: echo 'db.runCommand({ serverStatus:1 }).ok' | mongo admin -u $MONGO_INITDB_ROOT_USERNAME -p $MONGO_INITDB_ROOT_PASSWORD --quiet | grep 1
      interval: 10s
      timeout: 10s
      retries: 20

  # DATABASE GUIs
  mongo-express:
    image: mongo-express:0.54.0
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - ${MONGO_EXPRESS_PORT}:8081
    networks:
      - oliveira_trust
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/

  redis-commander:
    image: rediscommander/redis-commander
    container_name: redis-commander
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - oliveira_trust
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - HTTP_USER=${REDIS_COMMANDER_USERNAME}
      - HTTP_PASSWORD=${REDIS_COMMANDER_PASSWORD}
      - USE_SCAN=TRUE
    ports:
      - ${REDIS_COMMANDER_PORT}:8081